#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from plano import *

def run_test(impl):
    port = random_port()
    ready_file = make_temp_file()
    output_file = make_temp_file()

    try:
        with open(output_file, "w") as out:
            server = start_process("quiver-server //127.0.0.1:{}/q0 --impl {} --ready-file {}",
                                   port, impl, ready_file, output=out)

            try:
                for i in range(30):
                    if read(ready_file) == "ready\n":
                        break

                    sleep(1)

                call_and_print_on_error("quiver //127.0.0.1:{}/q0 -m 1", port)
            finally:
                stop_process(server)
    except:
        notice("Server output: {}", output_file)
        raise

def main():
    call_and_print_on_error("quiver-server q0 --init-only")
    call_and_print_on_error("quiver-server --init-only //localhost:5672/q0")
    call_and_print_on_error("quiver-server --impl-info")

    run_test("builtin")

    if which("artemis"):
        call_and_print_on_error("quiver-server --impl activemq-artemis --impl-info")
        run_test("activemq-artemis")

    if which("qpidd"):
        call_and_print_on_error("quiver-server --impl qpid-cpp --impl-info")
        run_test("qpid-cpp")

    # XXX Trouble here
    #if which("qdrouterd"):
    #    call_and_print_on_error("quiver-server --impl qpid-dispatch --impl-info")
    #    run_test("qpid-dispatch")

    notice("PASSED")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
