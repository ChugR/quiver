#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals
from __future__ import with_statement

from plano import *

def main():
    if not is_dir(join(home_dir(), "artemis")):
        exit("I need an artemis instance installed at $HOME/artemis")

    # XXX Also make sure port 61616 is free

    server_command = join(home_dir(), "artemis", "bin", "artemis")
    queue_type = "core-queue"

    if "--impl" in ARGS:
        impl = ARGS[ARGS.index("--impl") + 1]

        if impl in ("activemq-artemis-jms", "activemq-jms"):
            queue_type = "jms-queue"

    server = start_process("{} run > /dev/null", server_command)

    sleep(5)

    command = "{} destination create --name q0 --type {} > /dev/null"
    call(command, server_command, queue_type)

    command = "quiver //localhost/q0 {}"
    args = " ".join(ARGS[1:])
    exit_code = 0

    try:
        call(command, args)
    except CalledProcessError as e:
        error(e)
        exit_code = e.returncode
    finally:
        call("{} stop > /dev/null", server_command)
        exit(exit_code)

try:
    main()
except KeyboardInterrupt:
    pass
