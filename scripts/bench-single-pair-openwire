#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals
from __future__ import with_statement

import subprocess
import time

from plano import *

clients = (
    "activemq-jms",
)

def test_activemq(output_dir, messages):
    for client in clients:
        output_file = join(output_dir, "activemq-{}.txt".format(client))
        cmd = "scripts/test-client-with-activemq {} {} 2>&1 | tee {}" 

        call(cmd, client, messages, output_file)

def test_artemis(output_dir, messages):
    for client in clients:
        output_file = join(output_dir, "artemis-{}.txt".format(client))
        cmd = "scripts/test-client-with-artemis {} {} 2>&1 | tee {}" 

        call(cmd, client, messages, output_file)
        
if len(ARGS) != 2:
    print("Usage: {} MESSAGES".format(program_name()))
    exit("Wrong arguments")
        
messages = ARGS[1]

if not is_dir(join(home_dir(), "activemq")):
    exit("I need an ActiveMQ instance installed at $HOME/activemq")

if not is_dir(join(home_dir(), "artemis")):
    exit("I need an Artemis instance installed at $HOME/artemis")

script = file_name(ARGS[0])
timestamp = time.strftime('%Y-%m-%d', time.localtime())
output_dir = "{}-{}".format(script, timestamp)

remove(output_dir)
make_dir(output_dir)

test_activemq(output_dir, messages)
test_artemis(output_dir, messages)
        
print(output_dir)
        
for name in (list_dir(output_dir)):
    print("  {}".format(name))
