#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals
from __future__ import with_statement

import os
import signal
import sys

home_dir = os.path.normpath("@quiver_home@")
sys.path.insert(0, os.path.join(home_dir, "python"))

from plano import *

def main():
    assert which("artemis") is not None

    host = sys.argv[1]
    port = sys.argv[2]
    path = sys.argv[3]

    assert host == "localhost"
    assert port == "-"
    
    server = start_process("artemis run")

    def signal_handler(signum, frame):
        call("artemis stop")
        exit()

    signal.signal(signal.SIGTERM, signal_handler)

    wait_for_port(61616)

    try:
        call("artemis queue delete --name {}", path)
    except:
        pass

    try:
        call("artemis address delete --name {}", path)
    except:
        pass

    call("artemis queue create --name {} --no-durable --auto-create-address --address {} --anycast --preserve-on-no-consumers", path, path)

    while True:
        sleep(1)

try:
    main()
except KeyboardInterrupt:
    pass
