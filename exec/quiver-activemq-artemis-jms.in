#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals
from __future__ import with_statement

import os
import subprocess
import sys

home_dir = os.path.normpath("@quiver_home@")

def main():
    domain = sys.argv[3]
    credit = sys.argv[8]

    jar_file = os.path.join(home_dir, "java", "quiver-jms.jar")
    url = "tcp://{}?jms.prefetchPolicy.all={}".format(domain, credit)
    
    args = [
        "java",
        "-classpath", jar_file,
        "-Djava.naming.factory.initial=org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory",
        "-Dquiver.jms.cf.prefix=connectionFactory",
        "-Dquiver.jms.cf.name=ConnectionFactory",
        "-Dquiver.jms.cf.url={}".format(url),
        "-Dorg.slf4j.simpleLogger.defaultLogLevel=warn",
        "net.ssorj.quiver.QuiverJms",
    ]

    args += sys.argv[1:]

    sys.exit(subprocess.call(args))
    
if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
