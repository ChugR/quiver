#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals
from __future__ import with_statement

import os
import sys

home_dir = os.path.normpath("@quiver_home@")
sys.path.insert(0, os.path.join(home_dir, "python"))

from quiver import *

def main():
    id_ = sys.argv[4]
    host = sys.argv[5]
    port = sys.argv[6]
    credit_window = sys.argv[10]
    
    if port == "-":
        port = "61616"

    jar_file = os.path.join(home_dir, "java", "quiver-jms.jar")

    params = (
        "jms.clientID={}".format(id_),
        "jms.prefetchPolicy.all={}".format(credit_window),
    )

    url = "tcp://{}:{}?{}".format(host, port, "&".join(params))
    
    args = [
        "/usr/bin/env",
        "--",
        "java",
        "-Darrow.jms.url={}".format(url),
        "-Djava.naming.factory.initial=org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory",
        "-Dorg.slf4j.simpleLogger.defaultLogLevel=warn",
        "-classpath", jar_file,
        "net.ssorj.quiver.QuiverArrowJms",
    ]

    args += sys.argv[1:]

    os.execl(*args)
    
if __name__ == "__main__":
    main()
